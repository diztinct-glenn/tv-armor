<?php

require_once get_template_directory() . '/inc/styling/skin.php';

require_once get_template_directory() . '/inc/styling/stylizer.php';

/**
 * Enqueue the Google fonts required by the theme.
 */
if (!function_exists('mo_enqueue_custom_fonts')) {
    function mo_enqueue_custom_fonts() {

        $custom_fonts = array();

        $heading_font = mo_get_theme_option('mo_custom_heading_font');
        if (empty($heading_font)) {
            $heading_font = mo_get_theme_option('mo_heading_font');
            if (!empty($heading_font)) {
                $custom_fonts [] = $heading_font;
            }
        }

        $body_font = mo_get_theme_option('mo_custom_body_font');
        if (empty($body_font)) {
            $body_font = mo_get_theme_option('mo_body_font');
            if (!empty($body_font)) {
                $custom_fonts [] = $body_font;
            }
        }

        $use_text_logo = mo_get_theme_option('mo_use_text_logo') ? true : false;
        if ($use_text_logo) {
            $logo_font = mo_get_theme_option('mo_logo_font');
            if (!empty($logo_font)) {
                $custom_fonts [] = $logo_font;
            }
        }
        $system_fonts = array('Arial Black', 'Arial', 'Helvetica', 'Courier New', 'Georgia', 'Lucida Sans Unicode', 'Tahoma', 'Geneva', 'Times New Roman', 'Trebuchet MS', 'Verdana');

        $protocol = is_ssl() ? 'https' : 'http';
        foreach ($custom_fonts as $font_name) {
            if (!in_array($font_name, $system_fonts)) {
                $font_name = str_replace(" *", "", $font_name);
                $font_handle = strtolower(preg_replace('/ /', '-', $font_name));
                $font_to_load = preg_replace('/ /', '+', $font_name); // replace spaces in font names with + for importing Google fonts
                wp_enqueue_style('google-font-' . $font_handle, $protocol . '://fonts.googleapis.com/css?family=' . $font_to_load);
            }
        }

        if (empty($heading_font))
            wp_enqueue_style('google-font-lato', "$protocol://fonts.googleapis.com/css?family=Lato:300,400,700,900");
        if (empty($body_font))
            wp_enqueue_style('google-font-merriweather', "$protocol://fonts.googleapis.com/css?family=Merriweather:400,400italic,700,700italic");
    }
}

add_action('wp_enqueue_scripts', 'mo_enqueue_custom_fonts');

/* Output css as per user customization from the options panel */

if (!function_exists('mo_init_skin_css')) {
    function mo_init_skin_css() {

        $output = '';

        /* ------------------- Generate skin styling ----------------------------------- */

        $skin_color = mo_get_theme_skin();

        if ($skin_color !== 'default') {
            $output .= mo_generate_skin_styles($skin_color);
        }

        // Output styles
        if ($output <> '') {
            wp_add_inline_style('mo-style-plugins', $output); // after plugins.css file
        }

    }
}

add_action('wp_enqueue_scripts', 'mo_init_skin_css', 14); // load as late as possible

/* Output CSS generated by the stylizer based on theme options */
if (!function_exists('mo_init_stylizer_css')) {
    function mo_init_stylizer_css() {

        $stylizer_css = mo_stylizer_css() . "\n";

        wp_add_inline_style('mo-style-plugins', $stylizer_css); // after plugins.css file

    }
}

add_action('wp_enqueue_scripts', 'mo_init_stylizer_css', 16); // load as late as possible

/* Output custom CSS entered by the user */
if (!function_exists('mo_init_custom_css')) {
    function mo_init_custom_css() {

        $custom_css = mo_get_theme_option('mo_custom_css') . "\n";

        // output custom css style anyway even if it is empty right now to help populate the custom css in customizer JS when input by user.
        wp_add_inline_style('mo-style-plugins', $custom_css); // after plugins.css file

    }
}

add_action('wp_enqueue_scripts', 'mo_init_custom_css', 18); // load as late as possible

if (!function_exists('mo_layout_class')) {
    function mo_layout_class($classes) {

        $layout = 'layout-2c-l';

        if (is_home() || is_page_template('template-blog.php')) {
            $layout = mo_get_theme_option('mo_blog_layout', $layout);
        }
        elseif (is_page_template('template-portfolio.php') || is_page_template('template-portfolio-filterable.php') || is_post_type_archive('portfolio') || is_tax('portfolio_category')) {

            $layout = 'layout-1c';

            $layout = mo_get_theme_option('mo_portfolio_layout', $layout);

        }
        elseif (is_page_template('template-gallery.php') || is_page_template('template-gallery-filterable.php') || is_post_type_archive('gallery_item') || is_tax('gallery_category')) {

            $layout = 'layout-1c';

            $layout = mo_get_theme_option('mo_gallery_layout', $layout);
        }
        elseif (is_page()) {

            if (is_page_template('template-home.php')
                || is_page_template('template-full-width.php')
                || is_page_template('template-home.php')
                || is_page_template('template-single-page-site.php')
                || is_page_template('template-archives.php')
                || is_page_template('template-sitemap.php')
                || is_page_template('template-1c.php')
            )
                $layout = 'layout-1c';
            elseif (is_page_template('template-2c-r.php'))
                $layout = 'layout-2c-r';
            else {
                $layout = mo_get_theme_option('mo_page_layout', $layout);
            }
        }
        elseif (is_attachment() || is_singular(array('portfolio', 'page_section'))) {

            $layout = 'layout-1c';
        }
        elseif (is_single()) {

            $post_layout = get_post_meta(get_queried_object_id(), 'mo_current_post_layout', true);

            /* TODO: Remove later. Check for missing 'layout-' to help make it backwards compatible with older versions of theme */
            if (!empty($post_layout) && strpos($post_layout, 'layout-') !== 0) {
                $post_layout = 'layout-' . $post_layout;
            }

            if (empty($post_layout) || $post_layout == 'layout-default') {
                $layout = mo_get_theme_option('mo_post_layout', $layout);
            }
            else {
                $layout = $post_layout;
            }
        }
        elseif (is_archive()) {
            $layout = mo_get_theme_option('mo_archive_layout', $layout);
        }

        /* TODO: Remove later. Check for missing 'layout-' to help make it backwards compatible with older versions of theme */
        if (!empty($layout) && strpos($layout, 'layout-') !== 0) {
            if ($layout === 'Default')
                $layout = 'layout-2c-l';
            else
                $layout = 'layout-' . $layout;
        }

        $classes[] = apply_filters('mo_theme_layout', $layout);

        return $classes;
    }
}

add_filter('body_class', 'mo_layout_class');

if (!function_exists('mo_additional_styles')) {
    function mo_additional_styles($classes) {

        if (is_page_template('template-home.php') || is_page_template('template-single-page-site.php') || is_page_template('template-full-width.php') || is_singular('page_section'))
            $classes[] = 'fluid-width-page';

        if (is_page_template('template-single-page-site.php')) {
            $classes[] = 'single-page-template';
        }

        if (is_page_template('template-portfolio.php') || is_page_template('template-gallery.php') || is_tax('portfolio_category') || is_tax('gallery_category')
            || is_post_type_archive(array('portfolio', 'gallery_item'))
        ) {
            $classes[] = 'showcase-template';
            $ajax_portfolio = mo_get_theme_option('mo_ajax_portfolio');
            if ($ajax_portfolio)
                $classes[] = 'ajax-portfolio';
            $ajax_gallery = mo_get_theme_option('mo_ajax_gallery');
            if ($ajax_gallery)
                $classes[] = 'ajax-gallery';
        }

        if ((get_post_meta(get_queried_object_id(), 'mo_header_type', true) == 'Overlay'))
            $classes[] = 'header-overlay';
        else
            $classes[] = 'header-default';

        if ((mo_get_theme_option('mo_theme_layout') == 'Boxed'))
            $classes[] = 'boxed';

        if (is_page_template('template-blog.php'))
            $classes[] = 'archive';

        if (is_page()) {
            $background_url = get_post_meta(get_queried_object_id(), 'mo_entry_title_background', true);
            if (empty ($background_url))
                $background_url = mo_get_theme_option('mo_tagline_background');
            if (!empty($background_url)) {
                $classes[] = 'image-header';
            }
        }

        return $classes;
    }
}

add_filter('body_class', 'mo_additional_styles');

